import Matrix from '@/matrix'

const matrix = new Matrix([[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]])
const matrix2 = new Matrix([[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]])
const A = new Matrix([[1.5, 0], [0, 2]])
const B = new Matrix([[0, 4, 5], [0, 0, 3]])
const M = new Matrix([[2, 3], [4, 5]])
const N = new Matrix([[1, 4], [3, 2]])
console.log(matrix)
console.log(matrix.size)
console.log(matrix.rlen)
console.log(matrix.clen)
console.log(matrix.shape)
console.log(matrix[1][2])
console.log(matrix.rvector(2))
console.log(matrix.cvector(2))
console.log(matrix2.add(matrix))
console.log(matrix2.subtract(matrix))
console.log(matrix2.scalar(matrix))
console.log(matrix2.scalar(2))
console.log(Matrix.zero(5, 6))
console.log(matrix.transpose(), matrix.T)
// console.log(A, B)
console.log(A.dot(B))
// 矩阵没有交换定律
console.log(M.dot(N))
console.log(N.dot(M))
console.log(matrix.find(m => m[0] === 0))
const identity = Matrix.identity(2)
console.log(identity.dot(A))
console.log(A.dot(identity))
